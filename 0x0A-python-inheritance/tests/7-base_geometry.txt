Documentation for 7-base_geometry
=================================

This is a simple class with two public instance methods.

Instantiation
=============

::
        >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
        >>> bg = BaseGeometry()

The first public instance method raises an error

area() method
=============
Takes no arguments and raises an Exception
::
        >>> bg = BaseGeometry()
        >>> print(bg.area())
  Traceback (most recent call last):
        Exception: area() is not implemented

If an argument of any type is provided, it will result into an exception
::
        >>> bg = BaseGeometry()
        >>> print(bg.area(7))
        Traceback (most recent call last):
        ...
        TypeError: area() takes 1 positional argument but 2 were given

        >>> bg = BaseGeometry()
        >>> print(bg.area('n'))
        Traceback (most recent call last):
        ...
        TypeError: area() takes 1 positional argument but 2 were given

        >>> bg = BaseGeometry()
        >>> print(bg.area(0.7))
	 Traceback (most recent call last):
        ...
        TypeError: area() takes 1 positional argument but 2 were given

integer_validator() method
==========================
This method checks and validates if the given value argument is an integer

::
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("my_int", 12)

If the name argument is not a string then an exception will be raised unless
the value argument is of the same type

::
        >>> bg = BaseGeometry()
        >>> print(bg.integer_validator(2, "nuel"))
        Traceback (most recent call last):
        ...
	  TypeError: unsupported operand type(s) for +: 'int' and 'str'

If value argument is a string
=============================
This will raise a specified exception
::
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("name", "nuel")
        Traceback (most recent call last):
        TypeError: name must be an integer

If value argument is less than or equal to zero
===============================================
This also raises a specified exception
::
        >>> bg = BaseGeometry()
        >>> bg.integer_validator("age", 0)
        Traceback (most recent call last):
        ValueError: age must be greater than 0
        >>> bg.integer_validator("distance", -1)
	 Traceback (most recent call last):
        ValueError: distance must be greater than 0

If no argument is provided
==========================
This will lead to an error
::
        >>> bg = BaseGeometry()
        >>> bg.integer_validator()
        Traceback (most recent call last):
        ...
        TypeError: integer_validator() missing 2 required positional arguments:>

If one argument is provided
===========================
This will also result into an error
::
        >>> bg = BaseGeometry()
        >>> bg.integer_validator(3)
        Traceback (most recent call last):
	 ...
        TypeError: integer_validator() missing 1 required positional argument:
